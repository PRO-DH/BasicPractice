#------------------- Day 1----------------------

print("\n\n\n\n\n 06.07. \n\n\n\n\n")               # 랜덤함수 , 예습


print("생기초 예제")
print()
animal = "고양이"
print(animal+"는 귀엽다")   # 변수 통해서 식 만들기

# 식을 이어 갈때는 "," 혹은  "+" 로 이어갈수 있는데 "," 로 이어가면 띄어쓰기가 무조건 붙는다. "+"로 이어갈떄는 숫자앞에는 str()을 붙여주어야한다.
print()
print("다양한 명령어")
print(abs(-5))      # abs - 절대값
print(pow(4,2))     # pow - 제곱
print(max(5,12))    # max - 최댓값
print(min(5,12))    # min - 최소값
print(round(3.14))
print(round(4.99))  # round - 반올림

from math import *  # math 라는 라이브러리의 모든 함수를 가져온다.
print(floor(4.99))  # floor - 내림
print(ceil(3.14))   # ceil - 올림
print(sqrt(3))      # sqrt - 제곱근


#랜덤함수


from random import *    # random 이라는 라이브러리의 모든 함수를 가져온다.
print(random())         # 0~1 사이의 랜덤한 숫자 출력
print(random() * 10)    
print(int(random()*10)) # 0~1 사이의 랜덤한 숫자 x 10 을 하여 정수부분만 출력
print(int(random()*10) +1)

print(int(random()*45)+1)
print(int(random()*45)+1)
print(int(random()*45)+1)
print(int(random()*45)+1)
print(int(random()*45)+1)
print(int(random()*45)+1)

print(randrange(1,46)) # 1이상 46미만의 랜덤정수
print(randint(1,45))  # 1이상 45이하의 랜덤정수


print("오프라인 스터디 모임 날짜는 매월 " + str(randint(4,28))+ "일로 선정되었습니다.")  #+로 이어갈떄는 str을 항상 숫자앞에 붙여줘야한다.


#문자열

sentence = '나는 소년입니다'
print(sentence)
sentence2 = "파이썬은 쉬워요"
print(sentence2)
sentence3 = """
나는 소년이고,
파이썬은 참 쉬워요.
재미있네요"""
print(sentence3)

jumin = "999999-1111112"

print("성별 :" + jumin[7]) # 컴퓨터의 인덱스는 항상 0부터 시작하여 처음 9 는 1번쨰가 아닌 0번째. 따라서 성별은 7번쨰에 위치한 값
print("연 : " + jumin[0:2])  # x 번쨰 까지를 가져오려면 한자리 더 해야한다.  [0:2]로 적으면 0부터 2직전까지, 즉 0~1까지 가져온다.
print("월 : " + jumin[2:4])
print("일 : " + jumin[4:6])
print("생년월일 : " + jumin[0:6])  # 이떄는 [0:6]으로 안적고 그냥 [:6]으로 적어도 처음부터 6직전까지로 인식한다.
print("뒤 7자리 :" + jumin[7:14])  # 뒤도 마찬가지로 [7:] 로 사용할 수 있다.
print("뒤 7자리(뒤에부터) : " + jumin[-7:]) # 뒷자리부터는 - 붙여서 된다.


#문자열 처리함수

python = "Python is Amazing"
print(python.lower())   #모든문자가 소문자로
print(python.upper())   #모든 문자가 대문자로
print(python[0].isupper()) # 파이썬의 0번째 문자가 대문자인가?
print(len(python))      #파이썬 문자 전체의 길이를 말해준다 len=length
print(python.replace("Python","Java")) #앞 문자를 찾아서 뒷 문자로 바꿔준다.

index = python.index("n")
print(index)            #파이썬에서 n이라는 문자가 몇번쨰에 있는지?
index = python.index("n", index + 1)    # 앞에서 찾은 n 다음 위치에 있는 n을 찾기.
print(index)

print(python.find("n")) #index와 비슷하지만 다른점은 find는 없는 문자를 찾았을때 -1을 반환해준다. index는 오류가 난다.

print(python.count("n"))    #파이썬에서 n이 몇번 나오는지 알려줌


#문자열 포맷

print("나는 %d살입니다." % 28)  #d는 정수를 의미함. 정수값만 가능하다.
print("나는 %s을 좋아해요." % "파이썬") #s는 문자값을 의미함.
print("Apple 은 %c로 시작해요." % "A") #c는 캐릭터로 한글자만 의미함.
print("나는 %s색과 %s색을 좋아해요. " % ("파란", "빨간"))   #여러개의 %s가 있을경우 괄호를 이용하여 순서대로 출력할 수 있다.
print()

print("나는 {}살입니다." .format(20))   #.format()속에 있는 숫자를 중괄호에 들어간다.
print("나는 {}색과 {}색을 좋아해요." .format("파란", "빨간"))   #{}속에 숫자를 넣으면 그 순서대로 .format()속의 값이 들어간다.
print("나는 {1}색과 {0}색을 좋아해요." .format("파란", "빨간"))

print("나는 {age}살이며, {color}색을 좋아해요" .format(age = 20, color = "빨간"))

age = 20
color = "빨간"
print(f"나는 {age}살이며, {color}색을 좋아해요")  #print 함수안에 f로 시작하게되면 미리 지정한 변수가 중괄호 안으로 들어가게 된다. 


#탈출문자(이스케이프문자)

print("백문이 불여일견\n백견이 불여일타")   #\n - 줄바꿈, \t 탭
print("저는 \"나도코딩\"입니다.")          #\", \', \\
print("Red Apple\rPine")                   #\r 커서를 맨 앞으로 이동
print("Redd\bApple")                       #\b 한글자삭제
print()


#퀴즈3

site = "http://daum.net"
my_str = site.replace("http://", "")
print(my_str)
my_str = my_str[:my_str.index(".")]
print(my_str)
password = my_str[:3] + str(len(my_str)) + str(my_str.count("e")) + "!"
print("{0}의 비밀번호는 {1}입니다.".format(site,password))


















#------------------- Day 2----------------------

print("\n\n\n\n\n 06.08. \n\n\n\n\n")                   # type함수, 여러가지 연산자



# 여러 줄 주석 설정 및 해제 : 드래그 후 ctrl + / 

'''
여러줄 주석은 떙땡이 3개를 양 끝으로 두면 자동으로 처리됩니다.
아무거나 편한것으로 이용하면 되지만,
보통은 # 대신 떙떙이가 좋다.

편하게 말하기 위해서 땡땡이를 여러줄 주석이라고 말하지만 사실은 여러줄 문자열이다.
'''

# 변수 설정 시, 변수는 숫자로 시작 x, 변수는 공백포함 x, 예약어는 변수명으로 사용금지
# 예약어 : python에서 특정 역할을 하는 예약된 구문들 

import keyword          #예약어 라이브러리를 가져온다
print(keyword.kwlist)   #예약어 리스트를 출력한다.
print()

#type - 자료의 자료형을 반환한다.  / 정수형 : int / 실수형 : float / 문자열 :  str

print(type(1))
print(type(1.2))
print(type(1+2j))
print(type("hello"))
print()

#숫자 자료형의 연산자

a = 10
b = 3

print(a+b)
print(a-b)
print(a*b)
print(a/b)  # 무조건 실수로 값이 나온다. (ex. 4/2 = 2.0)
print(a//b) # 몫   
print(a%b)  # 나머지  
print(a**b) # 제곱
print()

#숫자형의 연산자
A = 20
B = 3


print( "A 는" , A, "입니다.")
print( "B 는", B, "입니다.")
print()                     # 칸 띄울때 많이 사용한다.
print("A + B = " , A + B )
print("A - B = ",A - B)
print("A * B = ",A * B)
print("A / B = ",A / B)
print("A // B = ",A // B)
print("A % B = ",A % B)
print("A ** B = ",A ** B)
print()


#문자열의 연산자
A = "hello"
B = "world"


print( "A 는" , A, "입니다.")
print( "B 는", B, "입니다.")
print()                     # 칸 띄울때 많이 사용한다.
print("A + B = " , A + B )  # 문자열 끼리의 연산자는 덧셈만 가능하다. 문자열 * 정수의 곱셈연산은 가능하다. (문자열의 반복)
print()

#혼합 연산자

A = "대한독립"
B = "만세"
C = "~"

D = A + " " + B * 3 + C * 4

print(D)
print()

# 에러보는 방법(에러창 바로바로 닫지말고 꼭 잘 확인하기.)
# 에러창에 line 이 나온다. 몇번 줄에서 에러가 나왔는지 나온다. 또한 표현 중 어떤 코딩이 잘 못 되어있는지도 ^ 표시로 나타난다.
# 그 밑에 에러의 종류가 나타난다. 그 이후 상세 내용들이 쭉 서술된다. 
# 에러의 종류. 
# SyntaxError : 오타 혹은 문법적인 오류 ( 괄호 열고 안닫기, 따옴표 안닫기)
# NameError : 선언되지 않은 변수 사용
# IndentationError : 칸 띄우기 에러

# 비트 연산자 / 개발할때는 전혀 필요없다
a = 0b1010
b = 2
print(a>>b)     # 2진수인 a의 자릿수를 오른쪽으로 b만큼 민다. (10진법으로는 a 나누기 ?)
print(a<<b)     # 2진수인 a의 자릿수를 왼쪽으로 b만큼 민다. (10진법으로는 a 곱하기 ?)
















print("\n\n\n\n\n\n06.09\n\n\n\n\n")                # input 함수, 입력함수에 관하여.


#input 함수. 입력값에 관하여.ㅣ
name = input("이름 입력 : ")
age = input("나이 입력 : ")
mail = input("메일 입력 : ")

print ("제 이름은", name, "이고 나이는",age, "이며 메일은",mail,"입니다.")
print()


# input 함수에서 주의할 점.
# 숫자를 입력하건 문자를 입력하건 무조건 문자열로 반환된다.

x = input("첫번쨰 수 : ")
y = input("두번쨰 수 : ")

# 위와 같이 숫자를 input으로 받고 연산을 해보면

# print("x+y = ",x + y)               # 오류

# 오류가 뜬다. 이 이유는 x와 y가 숫자가 아닌 문자열로 취급 되었기 때문
# 따라서 형 변환을 해주어야 한다.

print("x+y = ",int(x) + int(y))     # 형 변환
print()

a = float ( input ( "실수 1 : "))
b = float ( input ( "실수 2 : "))

print(a+b)      # 실수에서 0.1 + 0.2 = 0.300000004 등이 나온다. 소숫점 표현은 컴퓨터에서 정확하게 나오지 않는다. 따라서 실수계산은 파이썬에서 따로 라이브러리에서 한다.
print(a-b)
print(a*b)
print(a/b)      
print()

Lang = float( input ("국어 점수 : "))
Math = float(input  ("수학 점수 : "))
Scie = float(input  ("과학 점수 : "))

avg = (Lang+Math+Scie) / 3      # 평균을 가지고 재사용을 하거나 변동이 잦다면 아예 평균 자체를 새로운 변수로 설정해준다.

print(avg)
print()

a = int ( input("사과의 갯수 : "))

b = int ( input ("배의 갯수 : "))

Total = a*3000 + b*2000

print("사과",a,"개와 배",b,"개의 총 금액은 ",Total,"원 입니다.")
print()

hour = int ( input ( "시간을 입력하세요 :  "))
minuite = int ( input ("분을 입력하세요  "))
second = int( input ( "초를 입력하세요 : "))

print ( "총 시간은", hour*3600 + minuite*60 + second, "입니다.")
print()


print ("="*20)
print("섭씨를 화씨로 변환해드립니다.")
print("="*20)

Ctemp = float ( input ("섭씨 온도 입력 : "))
Ftemp = Ctemp * 9/5 +32

print("섭씨온도", Ctemp, "는 화씨 온도로",Ftemp,"입니다.")
print()

# round 함수. 반올림한다. round(반올림할 숫자,나타낼 자릿수)
print(round(1.5343,2))
print()

print(("="*30))
print("다음은 정n각형에서 한 내각의 크기를 구해주는 프로그램이다.")
print("="*30)


a = int ( input (" 몇 각형 ? "))

ang = (a - 2) * 180 / a

print("한 내각의 크기는",ang,"도 입니다.")
print()

height = int( input ( "현재 높이 입력 : "))
rema = round((1947 - height) / 1947 * 100,3)

print("앞으로",rema,"% 남았습니다. 화이팅!")
print()















#------------------- Day 3----------------------

print("\n\n\n\n\n 06/10. \n\n\n\n\n")                   #   조건문 , 비교 연산자


# 조건문에 관하여. ~~라면, ~~가 아니라면 등으로 나타난다.
# 자료의 형태는 Bool 형이다. 조건문은 if[Bool] : 로 시작한다.
# Bool 은 참/거짓을 나타내는 자료형이다. True / False는 무조건 대문자로 시작한다. (python 에서는)

# 숫자, 문자열이 어떤경우에 True, False로 변환되는지 탐구!
# 숫자열의 경우 bool(어떠한숫자) 전부 True가 되지만 bool(0) 즉 0 일때만 False가 나온다. 
# 문자열의 경우 bool(어떠한문자) 전부 True가 되지만 bool('') 즉 공백일때만 False가 나온다.
# 비교연산자, 논리연산자 > Bool 값을 반환한다. 

print("비교연산자 실습")
print()
a = 10
print(a>0)
print(a<3)
print(a==1) # 같다
print(a!=2) # 다르다
print(a>=4) # >=는 되지만 =>는 안된다. 
print(a<=5)

# python 에서만 2중 부등호 (ex. 1<a<=10) 의 표현이 가능하다. C나 java에서는 불가능하다.
print()

print("논리연산자 실습")
print()

# and, or, not 3가지 종류가 있다.
# 보통 if 비교연산자 and 비교연산자 등으로 사용한다.
# 연산자 우선순위 - 산술 > 비교 > 논리  ("*/%//"  >  "+-"  >  "비교"  >  "and"  >  "or"  >  "not")

# if[ Bool ] :                      : 이후에는 무조건 종속문장이다. ( python 의 규칙)
#   [ 종속문장 ]                 종속 문장들은 같은 칸띄우기를 해야한다. ( 앞에 칸이 조금이라도 다르게 띄워져있으면 에러가 난다.)
#   [ 종속문장 ]                 칸 띄워쓰기가 되는건 종속문장밖에 없다.  암묵적으로 종속문장 칸은 tab 1번 혹은 space 4번을 띄운다. 드래그해서 한번에 tab or shif+tab으로 좌우 이동가능

print("조건문 연습")
print()
a = 10

if 1:
    print(1)

if "" :
    print(2)

if 10>=a >0:
    print(3)

if a%2==0:
    print(4)

b = "hello"

if b=="hello":
    print(5)

if a!=10 and a%3 ==1:
    print(6)

if a>= 0 or a%2 != 0 and a < 20 :
    print(7)

print()
print("입력받아 조건문 돌리기")
print()

# 입력받아서 자릿수 구하기

a = int(input("수 입력 : "))

if 0 <= a < 10 :
    print("한자리수")

if 10 <= a < 100 :
    print("두자리수")

if 100 <= a < 1000 :
    print("세자리수")

if 1000 <= a :
    print("아따 너무 크다잉")

print()

# 수 입력받아서 양/음수 판별하기

a = int(input("수 입력 : "))

if a > 0 :
    print("양수입력")
if a < 0 :
    print("음수입력")
if a == 0 :
    print("0 입력")
    
print()

# 수 입력받아서 홀짝 구하기.

a = int(input("수1 입력 : "))
b = int(input("수2 입력 : "))
if a > b : 
    print(a)
if a < b :
    print(b)
if a == b :
    print("같습니다.")
print()

a = int ( input (" 수를 입력하세요 : "))

if a%2 == 0 :
    print(a,"는 짝수입니다.")

if a%2 == 1 :
    print(a,"는 홀수입니다.")

# 국영수 점수 평균에 따른 합불

print("="*30)
print("국영수 평균에 따른 합불")
print("="*30)
print()
kor = int ( input ("국어점수를 입력하세요 : "))
math = int ( input ("수학점수를 입력하세요 : "))
eng = int ( input ("영어점수를 입력하세요 : "))

avg = round ((kor + math + eng) / 3,1)

if avg >= 80 :
    print("평균",avg,"점으로 합격입니다.")

if avg < 80 :
    print("평균",avg,"점으로 불합격입니다.")


    print("="*30)
print("받아올림 판독기")
print("="*30)
print()

a = int ( input ("수1 입력해주세요 : "))
b = int ( input ("수2 입력해주세요 : "))

aa = (a + b) //10 % 10
bb = a // 10 % 10  + b //10 % 10

if aa != bb :
    print ("받아올림 발생 !")

if aa == bb < 10 :
    print ("받아올림 안발생 !")
print()

# if의 확장 ( elif 의 사용)
# if [ Bool ] :
#   [ 종 속 문 장 ]
#   elif [ Bool ] :
#   [ 종 속 문 장]
#   elif [ Bool ] :
#   [ 종 속 문 장]
#   else :
#   [ 종 속 문 장]

print()
print("elif 사용 예제")
print()
choice = int ( input ("choice 입력 : "))

if choice == 1 :
    print("1번 선택")
elif choice == 2 :
    print("2번 선택")
elif choice == 3 :
    print("3번 선택")
elif choice == 4 :
    print("4번 선택")
else :                          #else 는 무조건 조건이 없다.
    print("메뉴가 없음")
print()










#------------------- Day 4----------------------

print("\n\n\n\n\n 06.13. \n\n\n\n\n\n")         # if 문에 관한 실습들

# 실습 1
# math = int (input ("수학성적을 입력하세요 : "))
# sci = int (input("과학 성적을 입력하세요 : "))
# avg = (math + sci) / 2

# if avg >= 90 :
#     print("성적은 A입니다.")
# elif avg >= 80 :
#     print("성적은 B입니다.")
# elif avg >= 70 :
#     print("성적은 C입니다.")
# else :
#     print("성적은 D입니다.")

# # 실습 2
# a = int(input("수1  : "))
# b = int(input ("수2 : "))
# c = input("연산자 : ")

# if c == "+" :
#     print("a+b =", a+b)
# elif c == "-" :
#     print("a-b", a-b)
# elif c== "x" or c=="*" :
#     print("a * b =", a*b)
# elif c == "/" :
#     print("a/b = ", a/b)
# else :
#     print("연산자가 이상해요")


# 실습 3

# A = int(input ("월 : "))

# if 3 <= A <= 5 : 
#     print(A, "월은 봄입니다.")
# elif 6 <= A <= 9 : 
#     print(A, "월은 여름입니다.")
# elif 9 <= A <=11 :
#     print(A, "월은 가을입니다.")
# elif 12 == A or 1 <=A <= 2 :
#     print(A,"월은 겨울입니다.")
# else :
#     print("입력이 바르지 않습니다..")


# 실습 4

# A = int(input("수 :"))

# if A >= 0 :
#     print("절대값은",A,"입니다.")
# elif A < 0 :
#     print("절대값은",-A,"입니다.")


# 실습 5

# print("="*30)
# print("사과 : 3000원\n배 : 2000원")
# print("="*30)

# apple = int(input ("사과의 갯수 : "))
# pear = int(input("배의 갯수 : "))
# money = int(input("소지금액 : "))

# if money >= (apple*3000 + pear*2000) :
#     print(" 구매가능합니다! 잔돈은", money - (apple*3000 + pear*2000), "입니다.")
# else :
#     print("구매가 불가능합니다.")

# 실습 6

# A = int(input(" A 입력 : "))

# if A%15 == 0 :
#     print("A는 15의 배수입니다.")
# elif A%3 == 0 :
#     print("A는 3의배수입니다.")
# elif A%5 == 0 :
#     print("A는 5의배수 입니다.")
# else :
#     print("3,5,15의 배수가 아닙니다.")


# 실습 7

# print("="*30)
# print("1. 아메리카노\n2. 카페라떼")
# print("="*30)
# a = int(input("메뉴 선택 : "))
# print("="*30)
# print("1. Ice\n2. Hot")
# print("="*30)
# b = int(input("온도 선택 : "))
# if a == 1 :
#     if b==1 :
#         print("아이스 아메리카노 선택")
#     elif b==2 :
#         print("뜨거운 아메리카노 선택")
# elif a == 2 :
#     if b == 1:
#         print("아이스 카페라떼 선택")
#     elif b == 2 :
#         print("뜨거운 카페라떼 선택")


# 오류보기

# 아이디 = input("아이디 입력 : ")

# if 아이디 != "admin" :
#     print("계정이 존재하지 않습니다.")
# elif  아이디 == "admin" :
#     패스워드 = input("패스워드 입력 : ")
#     if  패스워드 == "admin" :
#         print ("로그인 성공")
#     else :
#         print("패스워드가 틀렸습니다.")


# Level 2 
# 실습 1

# A = int(input("A를 입력 : "))
# B = int(input("B를 입력 : "))

# A1 = A//100 + A//10%10 *10 + A%10*100
# B1 = B//100 + B//10%10 *10 + B%10*100

# if A1 > B1 : 
#     print (A)
# elif A1 < B1 :
#     print(B)
# else :
#     print("같다")


# 실습 2

# birth = int(input("생년월일 : "))
# date = int(20220613)

# if birth % 10000 > date % 10000 : 
#     print("만 나이 : ", date // 10000 - birth // 10000 - 1)
# else :
#     print("만 나이 :"), date // 10000 - birth // 10000


# 실습 2-1

# birth = int(input("생년월일 : "))
# A = birth//10000 % 12

# if A == 4 :
#     print("쥐 띠")
# elif A == 5 :
#     print("소 띠")
# elif A == 6 :
#     print("호랑이 띠")
# elif A == 7 :
#     print("토끼 띠")
# elif A == 8 :
#     print("용 띠")
# elif A == 9 :
#     print("뱀 띠")
# elif A == 10 :
#     print("말 띠")
# elif A == 11 :
#     print("양 띠 ")
# elif A == 0 :
#     print("원숭이 띠")
# elif A == 1 :
#     print("닭 띠")
# elif A == 2 :
#     print("술 띠")
# elif A == 3 :
#     print("돼지 띠")


# 실습 2-2

# n = int ( input ("몇번쨰 날 ? : "))

# n1 = n % 4

# if n1 == 1 :
#     print("당번 : A")
# elif n1 == 2 :
#     print("당번 : B")
# elif n1 == 3 :
#     print("당번 : C")
# elif n1 == 0 :
#     print("당번 : D")


# 실습 2-3

# n = int(input("며칠 후? : "))
# n1 = n % 7

# if n1 == 0 :
#     print("금요일")
# elif n1 == 1 :
#     print("토요일")
# elif n1 == 2 :
#     print("일요일")
# elif n1 == 3:
#     print("월요일")
# elif n1 == 4 :
#     print("화요일")
# elif n1 == 5 :
#     print("수요일")
# elif n1 == 6 :
#     print("목요일")


# 실습 2-4

# date = int(input (" 년도 입력 : "))

# if date % 4 == 0 :
#     if date % 100 == 0 :
#         if date % 400  != 0 :
#             print("윤년이 아닙니다.")
#         elif date % 400 == 0 :
#             print("윤년입니다.") 
#     else :
#         print("윤년입니다.")
# else :
#     print("윤년이 아닙니다.")
    

# 실습 3-1
# n = int (input("몇번째 정차? :"))
# n1 = n%8

# if n1 == 1 :
#     print("A")
# elif n1 == 2 or n1 == 0 :
#     print("B")
# elif n1 == 3 or n1 == 7 :
#     print("C")
# elif n1 == 4 or n1 == 6 :
#     print("D")
# elif n1 == 5 :
#     print("E")

#실습 3-2
# hour = int (input("시간 입력 : "))
# minuite = int(input("분 입력 : "))

# if minuite >= 30 :
#     print("30분 전은", hour ,"시",minuite,"분입니다.")
# elif minuite < 30 :
#     if hour >= 1 :
#         print("30분 전은", hour - 1, "시", 60 - minuite, "분입니다.")
#     elif hour == 0 :
#         print("30분 전은 23시", 60-minuite,"분입니다.")

# 실습 3-3

# A = int(input("A를 입력 : "))
# B = int(input("B를 입력 : "))

# A1 = A//100 + A//10%10 *10 + A%10*100
# B1 = B//100 + B//10%10 *10 + B%10*100

# if A1 > B1 : 
#     print (A)
# elif A1 < B1 :
#     print(B)
# else :
#     print("같다")

# # 실습 4-1 
# hour = int(input("시간 : "))
# minuite = int(input("분 : "))
# n = int(input("n분 전의 시간 : "))

# if n >= 60 :
#     m1 = n%60
#     h1 = n//60

#     if h1 > 24 :
#         h2 = h1%24
#         pass

#     elif h1 <= 24 :
#         if h1 > hour : 
#             if m1 <= minuite :
#                  print(n,"분 전의 시간은",24-(h1-hour),"시",minuite-m1,"분입니다.")
#             elif m1 > minuite : 
#                     print(n,"분전의 시간은",24-(h1-hour) - 1,60 - (m1-minuite),"분입니다.")
#         if h1 <= hour : 
#             if m1 <= minuite :
#                  print(n,"분 전의 시간은",hour-h1,"시",minuite-m1,"분입니다.")
#             elif m1 > minuite : 
#                 if hour == 0 :
#                     print(n,"분전의 시간은 23시",60 - (m1-minuite),"분입니다.")
#                 if hour >= 1 :
#                     print(n,"분전의 시간은",hour-1,"시",60 - (m1-minuite),"분입니다.")
# else :
#     if n <= minuite :
#         print(n,"분 전의 시간은",hour,"시",minuite,"분입니다.")

#     elif n > minuite : 
#         if hour == 0 :
#             print(n,"분전의 시간은 23시",60 - (n-minuite),"분입니다.")
#         if hour >= 1 :
#             print(n,"분전의 시간은",hour-1,"시",60 - (n-minuite),"분입니다.")


# 실습 4-2
# n = int(input("n번째 날"))

# if 1 <= n%12 <=3 :
#     print("당번은 A")
# elif 4<= n%12 <= 6 :
#     print("당번은 B")
# elif 7<= n%12 <= 9 :
#     print("당번은 C")
# elif 10<= n%12 <=11 or n%12 == 0 :
#     print("당번은 D") 


# kor = int(input("국어점수 입력 : "))

# if 0 <= kor <= 100 :
#     math = int(input("수학점수 입력 : "))
#     if 0<=math<=100 :
#         print("평균 : " , (kor+math)/2)
#     else :
#         print("수학 점수 이상 !!")

# else :
#     print("국어 점수 이상!")












#------------------- Day 5----------------------

print("\n\n\n\n\n 06.14.\n\n\n\n\n\n\n")        # 반복문 for / 자료형 리스트, 자료형 튜플

# for : 반복횟수 명확
# while : 반복횟수 명확 x

# for 문에서의 자료형 -> 리스트 , 튜플
# 리스트, 튜플 -> 자료들의 자료형. 순서가 있다. -> subscriptable(연속적인) 자료형 : list, tuple, str

# 대괄호 [1,2,3,4,'a','b',True]는 리스트
# 소괄호 (1,2,3,4,'a','b',True)는 튜플  / 우리는 튜플은 안쓸것이다 / 튜플속에 하나만 들어있으면 자료형을 따라간다 / tu = (1,)

# 각각의 자료에 번호가 부여되어있다.(index, 0부터 시작)
# 인덱싱(인덱스를 사용해서 자료에 접근) - 리스트,튜플 [index]

li = ["1.아인언맨", "2.스파이더맨"]
print(li)
user = int(input("골라주세요 : "))
print(li[user-1] , "선택")
print()

# 리스트 - 자료변경 가능
# 튜플 - 자료변경 불가능

li = [1,2,3,4,5]
li[2] = "hello"
print(li)           # [1,2,"hello",4,5]
print()

# tu = (1,2,3,4,5)
# tu[2] = "hello"
# print(tu)           # 에러 뜬다.

# list 함수 - ppt 218쪽 참조.

li = [1,"hello", False,1.2, 'world']
print(li)

# 1. 리스트.append(x)   :  (기능)X를 맨 뒤에 붙힘
li.append(10)
print(li)

# 2. 리스트.insert(idx, x)   :   (기능)idx 위치에 x 자료 추가
li.insert(0,"jeju")
print(li)

# 3. 리스트.pop(idx)    : (기능,반환)idx 위치의 자료 삭제 / (idx 디폴트값 - 맨 뒤)
li.pop()
print(li)
li.pop(0)
print(li)
    # 3-1. 리스트.pop 의 반환
x = li.pop(0)
print(x,"가 삭제된",li)

# 4. 리스트.count(x)    :   (반환)리스트 내의 x 자료의 갯수 반환
li2 = [2,2,2,2,2,2,1,1,1,1,1,1,1,1]
li2.count(1)        # 반환만 하기 때문에 아무 값도 안나온다.
print(li2.count(1)) # 이런식으로 붙여줘야 값이 보이게 된다.

# 5, 리스트.index(x)    :   (반환)x의 인덱스 반환
li = [1,"hello", False,1.2, 'world']
print(li.index("hello"))    # "hello"의 인덱스가 나오게 된다.

# 예제1
li = ["apple", "banana", "coffee"]
print(li)

x = li.index(input("삭제할 단어 입력 : "))

y= li.pop(x)

print(y,"가 삭제됩니다.")

print(li)

# 6. 리스트.sort()  :   (기능) 리스트를 정렬 (동일한 자료일 경우)
li = [7.8,2,5,1,10,4,3.6]       # 숫자는 오름차순
li.sort()
print(li)
li = ['j','a','rk','가','@']    # 문자는 추후에 배움
li.sort()
print(li)

# 7. 리스트.reverse()   :   (기능)  리스트를 거꾸로 뒤집어줌
li = [1,2,3,4,5]
li.reverse()
print(li)

# 8. 리스트.clear()     :   (기능) 리스트를 비운다.
li.clear()
print(li)



li = [1, "hello", False, 1.2, 'world']

# 1. ✨✨ 리스트 요소추가 (맨뒤)
# 리스트.append(x)   : x 를 맨뒤에 붙힘
li.append(10)
print(li)

# 2. 리스트 요소추가 (원하는 위치)
# 리스트.insert(idx, x)   : idx 인덱스 위치에 x 자료 추가
li.insert(0, "jeju")
print(li)

# 3. 리스트 요소 삭제
# 리스트.pop(idx)   : idx 인덱스 위치의 자료를 삭제 , 반환
#                    (idx 디폴트값 맨뒤)
x = li.pop(0)
print(x, "가 삭제됨", li)

# 4. 리스트 특정 요소의 개수 반환
# 리스트.count(x)   : 리스트 내의 x 자료의 개수 반환
li2 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2]
print(  li2.count(1)   )


li = [1, "hello", False, 1.2, 'world']
# 5. 리스트 특정 요소의 인덱스 반환
# 리스트.index(x)   :  x 의 인덱스 반환
print(  li.index("hello")  )

# d = ["apple", "banana", "coffee"]
# print(d)
# user = input("삭제할 단어 : ")
# idx = d.index(user)
# x = d.pop(idx)
# print(x, "가 삭제됨")
# print(d)

# 6. 리스트 정렬
# 리스트.sort()   : 리스트를 오름차순 정렬 (동일한 자료일경우)
li = [7.8, 2, 5, 1, 10, 4, 3.6]
li.sort()
print(li)

li = ["a", "가", "@", "["]
li.sort()
print(li)

# 7. 리스트 뒤집기
# 리스트.reverse()  : 리스트 거꾸로 뒤집어줌
li = [1,2,3,4,5]
li.reverse()
print(li)

# 8. 리스트 비우기
# 리스트.clear()
li.clear()
print(li)

# 유용한 표현
# sum(li) / 모든 자료형의 합 / 숫자만 들어있을때 사용 가능하다.
# len(li) / 자료형의 요소의 갯수
# 응용 : 평균구하기 = sum(li)/len(li)

# iterable 한 자료 = str/list/tuple/set/dict -> 얘네만 for문에 사용가능하다

# for [ 반복문에서 사용될 변수 ] in [ iterable 자료형 ] :
#       [ 종 속 문 장 ]

# range( [start:0 , stop, [step:1]])    /   range도 list와 같다고 본다.
# []는 생략가능     /   range 안의 범위에는 int(input)으로 입력값을 받을수있다.

# 입력한 수까지 나오기
for i in range(1,int(input("입력 수 : "))+1) :  # range를 빠트리면 tuple로 동작되니 유의할 것.
    print(i)

# 두 수 사이의 수 구하기.

A = int(input("입력 1 : "))
B = int(input("입력 2 : "))

if A < B :
    for i in range(A+1,B) :
        print(i)

if A > B :
    for i in range(A-1,B,-1) :
        print(i)


        # 복합연산자

li = 'ab'
a = 2

a += 3  # a = a + 3
a -= 4  # a = a - 4
a *= 2  # a = a * 2
a /= 5  # a = a / 5
a //= 3 # a = a // 3
a **= 4 # a = a ** 4
li += 'c'   # li = li + 'c'
li *= 4     # li = li * 4

su = 0
for i in [1,2,3,4,5] :
    su += i
    print(su)

    n = int(input("입력 : "))

for i in range(1,n+1) :
    if   i % 2 == 0 :
        print("짝수")

    elif i % 2 == 1 :
        print("홀수")


# 실습 1
n = int(input("입력 : "))

for i in range(1,n+1) :
    if   i % 2 == 0 :
        print("짝수")

    elif i % 2 == 1 :
        print("홀수")


# 실습 2
N = int(input("입력 : "))
A = str()

for i in range(1,N+1) :
    B = str(i)
    A += B
    
print("길이는 : ",len(A))

































#------------------- Day 6----------------------

print("\n\n\n\n\n\n 06.15. \n\n\n\n\n\n")       #for 문 실습



# 6의 배수 출력하기

print("="*30)
print("1~N까지 6의 배수를 출력하기")
print("="*30)
N = int(input("N 입력: "))
print("="*30)
print("6의 배수는",end = "")
for i in range(1,N+1) :
    if i % 6 == 0 :
        print(i," ",end="")
print("이다.")
print("="*30)



# 짝수의 합, 홀수의 합 구하기

n = int(input("입력 : "))       # 방법 1
su1 = 0
su2 = 0

for i in range(1,n+1) :
    if   i % 2 == 0 :
        su1 += i

    elif i % 2 == 1 :
        su2 += i

print("짝수의 합 : ",su1)       
print("홀수의 합 : ",su2)


n = int(input("입력 : "))       # 방법 2
li1 = []
li2 = []

for i in range(1,n+1) :
    if   i % 2 == 0 :
        li1.append(i)

    elif i % 2 == 1 :
        li2.append(i)

print(sum(li1),sum(li2))


# 짝수의 갯수, 홀수의 갯수 구하기

n = int(input("입력 : "))       
su1 = 0
su2 = 0

for i in range(1,n+1) :
    if   i % 2 == 0 :
        su1 += 1

    elif i % 2 == 1 :
        su2 += 1

print("짝수의 갯수 : ",su1)       
print("홀수의 갯수 : ",su2)

# 실습 1
n = int(input("입력 : "))
li = []

for i in range(1,n+1) :
    if   i % 4 == 0 :
        li.append(i)
        
print(li) 


# 당번 전부 출력하기

N = int(input("N일 : "))        # 1번 방법
li=[]

for i in range(1,N+1) :
    if i % 4 == 1 :
        li.append("A")
    if i % 4 == 2 :
        li.append("B")
    if i % 4 == 3 :
        li.append("C")
    if i % 4 == 0 :
        li.append("D")
print(li)


N = int(input("N일 : "))        # 더 간단한 2번 방법
li=["D","A","B","C"]

for i in range(1,N+1) :
    print(li[i%4])

    # # Q1
# N = int(input("숫자 n : "))
# su1 = 0
# su2 = 0
# for i in range(1,N+1) :
#     if i % 7 == 0 :
#         su1 += i
#         su2 += 1
# print("합 : ",su1,"수 :",su2)



# Q2
# n = int(input("입력 : "))      
# su1 = 0
# su2 = 0

# for i in range(1,n+1) :
#     if   i % 2 == 0 :
#         su1 += i

#     elif i % 2 == 1 :
#         su2 += i

# print("짝수의 합 : ",su1)       
# print("홀수의 합 : ",su2)



# Q3
# n = int(input("입력 : "))      
# su1 = 0
# su2 = 0
# for i in range(1,n+1) :
#     if i % 3 == 0 :
#         su1 += 1
#     if i % 5 == 0 :
#         su2 += 1
# print(su1 - su2)


# Q4
# li1 = ['O', 'O', 'O', 'O', 'AB', 'B', 'A', 'A', 'O', 'AB', 'B', 'A', 'B', 'AB', 'AB', 'AB', 'O', 'A', 'A', 'AB', 'B', 'AB', 'O', 'B', 'A', 'O', 'A', 'O', 'AB', 'O', 'AB', 'AB', 'O', 'B', 'B', 'O', 'O', 'AB', 'B', 'A']
# su1 = 0
# su2 = 0
# su3 = 0
# su4 = 0

# for i in li1 :
#     if i == 'A' :
#         su1 += 1
#     if i == 'B' :
#         su2 += 1
#     if i == 'AB' :
#         su3 += 1
#     if i =='O' :
#         su4 += 1
# print("A ,B, AB, O 는 각각 ",su1,su2,su3,su4,"명")


# Q5
# li1 = [6600, 4800, 3400, 3200, 4500, 5500, 3200, 7800, 4200, 5300, 7500, 4200, 7200, 5600, 6700, 8000, 7000, 6700, 6200, 6100, 4700, 7200, 7100, 5700, 5900, 4300, 5200, 5600, 5900, 6600, 4900, 5800, 7100, 5800, 4500, 3200, 7800, 5300, 7200, 8000]
# su1 = 0
# for i in li1 :
#     if 5000 - i >= 0 :
#         su1 += 1
# print(su1)


# Q6
# li1 = [80, 70, 44, 66, 40, 80, 77, 57, 68, 90, 75, 84, 99, 52, 45, 53, 54, 96, 59, 47, 57, 68, 74, 68, 79, 60, 63, 67, 43, 100, 43, 54, 77, 59, 75, 60, 97, 47, 100, 54]
# su1 = 0
# for i in li1 :
#     if i < 80 :
#         su1 += 1
# print(su1)

# Q7
# li1 = [-230, -139, 154, 471, 343, -285, -272, -358, 171, 433, 492, 213, 458, -324, 266, -441, -283, 196, 452, -273, 349, -435, 256, 263, 440, -308, -338, 255, -325, 155, 429, -244, -477, -293, 265, 446, -320, 331, -371, 267, -167, 315, -224, 365, -112, 274, 338, 120, 344, -303, 203, -308, -458, -189, 100, 343, -264, -334, -227, -328, 133, 153, -259, -252, 233, -357, -122, 174, 431, -212, 128, 180, -294, -239, 208, -404, -493, 405, -238, -460, -264, -161, 187, 320, -323, 100, 473, 258, -211, -148, 187, -188, -117, -164, -122, 254, 454, -180, 377, 469]
# su1 = 0
# su2 = 0
# for i in li1 :
#     if i >= 0 :
#         su1 += i
#     elif i < 0 :
#         su2 += i
# print(su1-su2)

# Q8
# li1 = [460, 453, 463, 479, 344, 445, 362, 358, 448, 401, 432, 363, 395, 419, 437, 412, 419, 475, 396, 373, 413, 337, 379, 313, 479, 348, 473, 424, 412, 354, 418, 489, 368, 302, 483, 467, 459, 389, 387, 315, 429, 344, 307, 456, 486, 436, 334, 438, 442, 473, 439, 401, 438, 408, 359, 399, 451, 336, 323, 382, 361, 437, 432, 459, 362, 352, 466, 309, 314, 327, 393, 340, 340, 319, 378, 485, 463, 311, 454, 342, 409, 479, 428, 310, 435, 416, 348, 342, 361, 471, 321, 486, 330, 309, 318, 374, 375, 491, 320, 384]
# su1 = 0
# for i in li1 :
#     if i % 6 == 0 :
#         su1 += i
# print(su1)

# # Q9
# n = int(input("단 입력 : "))
# for i in range(1,10) :
#     print(n,"x",i,"=",n*i)


# 심화1
# n1 = int(input("수 입력 : "))
# n2 = int(input("수 입력 : "))
# n3 = int(input("수 입력 : "))
# n4 = int(input("수 입력 : "))
# li1 = [n1,n2,n3,n4]
# for i in li1 :
#     if i % 2 == 0 :
#         print(i,"은 짝수 ")
#     elif i % 2 == 1 :
#         print(i,"은 홀수 ")

# 심화1 수정
# li1=[]
# for i in range(1,5) :
#     li1.append(int(input("수 입력 : ")))
# for i in li1 :
#     if i % 2 == 0 :
#         print(i,"은 짝수 ")
#     elif i % 2 == 1 :
#         print(i,"은 홀수 ")

# 심화1
# for i in range(1,5) :
#     n = int(input("수입력 : "))
#     if n % 2 == 0 :
#         print(n,"은 짝수")
#     else :
#         print(n,"은 홀수")


# 심화 3
# n = int(input("몇 회를 입력하시겠습니까 ? : "))

# for i in range(1,n+1) :
#      n1 = int(input("수 입력 : "))
#      n2 = int(input("수 입력 : "))
#      op1 = int(input("연산자 입력 (덧셈1, 뺄셈2) :" ))
#      if op1 == 1 :
#         print(n1,"+",n2,"=",n1+n2)
#      elif op1 == 2 :
#         print(n1,"-",n2,"=",n1-n2)
#      else :
#         print("입력 오류!!")

# 심화 4
# li=[]
# for i in range(1,6) :
#     li.append(int(input("수 입력 : ")))

# avg = sum(li)/len(li)
# print("5과목의 평균은",avg)
# for i in li :
#     if i <= avg :
#         print(i,"는 평균이하")


# 심화 a

a = str(input("ox를 입력하시오 : "))
su0 = 0
su1 = 0
li = []

for i in a :
    if i == 'o' :
        li.append(1)
        su0 = 2**(len(li)-1)
    elif i == 'x' :
        li = []
        su0 = 0
    su1 += su0
print(su1)

# -- 썜 풀이
# st = input()

# sc = 0
# s = 1
# for i in st:
#     if i == "o":
#         sc += s
#         s *= 2
#     else:
#         s = 1
# print(sc)


# 심화 b

# a = input("문자열 입력 : ")
# n = 0
# b = 0

# for i in a : 
#     if i == '(' :
#         n += 1
#     elif i == ')' :
#         n -= 1
#     if n < 0 :
#         b += 1
# if b == 0 :
#     print("잘 닫혀있습니다.")
# elif b > 0 :
#     print("잘못닫혀있습니다.")


# 방탈출 1번

# li1 = [32, 92, 45, 36, 67, 35, 66, 58, 67, 35, 95, 69, 90, 58, 31, 34, 80, 64, 35, 43, 35, 47, 61, 70, 39, 54, 37, 34, 79, 48, 45, 32, 80, 55, 80, 63, 42, 47, 99, 94, 96, 68, 94, 38, 56, 86, 86, 55, 46, 61, 30, 77, 81, 94, 45, 93, 93, 74, 89, 100, 45, 94, 72, 49, 46, 61, 64, 67, 97, 56, 75, 72, 67, 80, 88, 36, 70, 91, 74, 35, 53, 85, 34, 65, 32, 41, 34, 84, 48, 46, 40, 78, 67, 90, 67, 41, 60, 84, 90, 90, 33, 78, 88, 35, 46, 64, 67, 60, 63, 40, 78, 38, 40, 36, 68, 62, 33, 53, 55, 60, 72, 35, 31, 48, 65, 79, 96, 89, 45, 48, 95, 31, 37, 99, 30, 46, 94, 64, 78, 53, 71, 72, 44, 46, 56, 82, 67, 82, 73, 57, 87, 38, 47, 41, 52, 60, 53, 38, 51, 45, 47, 34, 69, 83, 54, 55, 91, 68, 34, 92, 58, 62, 88, 88, 99, 55, 87, 61, 95, 33, 79, 62, 69, 45, 67, 94, 37, 95, 96, 71, 63, 42, 79, 89, 37, 48, 60, 38, 87, 49, 86, 100, 55, 53, 70, 63, 74, 81, 59, 85, 93, 52, 73, 72, 49, 80, 43, 61, 90, 37, 77, 48, 97, 52, 45, 82, 72, 75, 89, 65, 63, 79, 62, 78, 35, 73, 58, 70, 83, 97, 32, 52, 49, 61, 74, 96, 41, 74, 82, 61, 98, 75, 84, 90, 81, 47, 47, 47, 71, 74, 47, 90, 48, 86, 38, 34, 42, 99, 37, 55, 56, 64, 64, 51, 31, 86, 69, 73, 53, 96, 80, 60, 58, 83, 61, 95, 95, 78, 63, 82, 32, 99, 87, 32, 43, 68, 30, 95, 82, 39, 66, 66, 68, 68, 45, 49, 50, 40, 32, 63, 54, 43, 62, 73, 51, 41, 79, 30, 100, 83, 94, 64, 53, 74, 32, 78, 65, 44, 57, 88, 100, 46, 84, 97, 32, 66, 46, 67, 80, 69, 99, 36, 95, 65, 80, 67, 82, 86, 55, 63, 59, 78, 63, 55, 45, 77, 80, 73, 48, 41, 43, 80, 54, 84, 32, 78, 95, 67, 34, 50, 86, 67, 30, 44, 34, 30, 84, 92, 68, 89, 67, 97, 30, 79, 70, 61, 55, 59, 53, 85, 70, 76, 36, 41, 64, 32, 32, 69, 40, 30, 85, 92, 38, 34, 82, 99, 50, 59, 94, 57, 56, 95, 55, 98, 43, 41, 48, 94, 35, 62, 59, 96, 69, 99, 44, 63, 50, 91, 68, 96, 30, 98, 81, 100, 47, 87, 70, 80, 63, 62, 71, 94, 53, 30, 64, 48, 75, 55, 54, 97, 65, 90, 96, 82, 78, 64, 48, 88, 91, 92, 77, 92, 30, 75, 30, 69, 66, 37, 66, 62, 72, 53, 96, 97, 52, 50, 37, 69, 57, 66, 97, 31, 74, 100, 82, 63, 36, 33, 63, 91, 58, 70, 55, 89, 91, 39, 53, 50, 84, 52]
# s1 = []
# s2 = []
# s3 = []
# s4 = []

# for i in li1 :
#     if i >= 90 :
#         s1.append(i)
#     elif 90 > i >= 80 :
#         s2.append(i)
#     elif 80 > i >=70 :
#         s3.append(i)
#     else :
#         s4.append(i)

# print(len(s1) + 2*len(s2) + 3*len(s3) + 4*len(s4))

# 방탈출 2번 
# 실습 2
N = int(input("입력 : "))
A = str() 
C = 0

for i in range(1,N+1) :
    B = str(i)
    A += B
    C += len(A)
    
print(C)





















#------------------- Day 7----------------------

print("\n\n\n\n\n\n\n 06.16. \n\n\n\n\n\n\n")       # 반복문 실습 2, break,continue

# n의 약수 구하기
n = int(input("N 입력 : "))
li = []
for i in range(1,n+1) :
    if n % i == 0 :
        li.append(i)
print(li)

# 소수 구하기
n = int(input("N 입력 : "))
b = 0
for i in range(2,n) :
    if n % i == 0 :
        b += 1
if b > 0 :
    print("소수가 아니다.")
elif b == 0 :
    print("소수이다.")

# 완전수 구하기
N = int(input("수 입력  "))
li = []
for i in range(1,N+1):
    if N % i == 0:
        li.append(i)
if sum(li) == N :
    print("완전수")
else :
    print("완전수가 아님")



# 방탈출 3
li1 = [2359, 5032, 4258, 15957, 5201, 3075, 9543, 13394, 13363, 6522, 19034, 1083, 18116, 9693, 16558, 15640, 2321, 1350, 15793, 8096, 10330, 15348, 5203, 11252, 4541, 18183, 2776, 16765, 8844, 9370, 9262, 2030, 8007, 11692, 18990, 16167, 9349, 5684, 2151, 1619, 4136, 4438, 8204, 6047, 1672, 8742, 9211, 14662, 18471, 6801, 19582, 19869, 8297, 7783, 14805, 13092, 1736, 5203, 9265, 16929, 5930, 1945, 2184, 6395, 8359, 14683, 18886, 12019, 8694, 10903, 19854, 19704, 4161, 8581, 15179, 7634, 8596, 4075, 13547, 6650, 1404, 12228, 14532, 1106, 11753, 3190, 19673, 4809, 9312, 6788, 19186, 16444, 2616, 11166, 8376, 1086, 19559, 4674, 8573, 19692, 14484, 15507, 12183, 7563, 4843, 19369, 10478, 9245, 18323, 11236, 8507, 7002, 19465, 4315, 15506, 1132, 15708, 18327, 1946, 8290, 4376, 7448, 13270, 17283, 12095, 9436, 9114, 3631, 10391, 12378, 3830, 18340, 4941, 8207, 15241, 5725, 18715, 16315, 7144, 7349, 14783, 9050, 2940, 18067, 11451, 12669, 4187, 15739, 11764, 17281, 15540, 1006, 9410, 16054, 5742, 15965, 10206, 14356, 3045, 12254, 1517, 16825, 19396, 18841, 11306, 16859, 8911, 9223, 17534, 1470, 7254, 14523, 13935, 6785, 6712, 9773, 9507, 11743, 3954, 6351, 3838, 16066, 11586, 4938, 1586, 11511, 16897, 7665, 17731, 1567, 6033, 12492, 9820, 17091, 3368, 11054, 18146, 2841, 5232, 6402, 10732, 5385, 8629, 3121, 16363, 4974, 17197, 19498, 7873, 19796, 1716, 6187, 11201, 1696, 19342, 9460, 9628, 17456, 13240, 9460, 11718, 4995, 15476, 8870, 4474, 16814, 12018, 11616, 18867, 10976, 10383, 15408, 4198, 1549, 9833, 14384, 18909, 12835, 4957, 14398, 16357, 7930, 17217, 1017, 10321, 17969, 18123, 19601, 19870, 12346, 4701, 4312, 19750, 9531, 4836, 6250, 15003, 13497, 10391, 18414, 16527, 14143, 5161, 14512, 15001, 8304, 19244, 11076, 4992, 1774, 16239, 18991, 3178, 3349, 9033, 17746, 7766, 13472, 10475, 6529, 1349, 7525, 2760, 12207, 10798, 5398, 17580, 5158, 8421, 4019, 19254, 6841, 16578, 5075, 9082, 5267, 19617, 2983, 12496, 8789]
li2 = []
li3 = []
b = 0

for i in li1 :                          # li1의 수 하나 뽑았다.
    for j in range(1,i+1) :             # 1부터 li1수까지 중에서
        if i % j == 0  :                # 약수(j)들 찾아서
            for k in range (2,j) :      # 그 약수(j)가 소수인지를 판별
                if j % k == 0 :
                    b += 1
            if b == 0 :
                li2.append(j)           # 만약 약수(j)가 소수라면 li2에 저장
    if len(li2) >= 4 :                  # li2의 길이가 4 이상이면
        li3.append(i)                   # li1수(i) 를 li3에 저장
    li2 = []                            # 약수 담는 li2는 다시 초기화
        
print(sum(li3))                         # 모인 것들의 합


# 방탈출 3 - 수정 1
li1 = [2359, 5032, 4258, 15957, 5201, 3075, 9543, 13394, 13363, 6522, 19034, 1083, 18116, 9693, 16558, 15640, 2321, 1350, 15793, 8096, 10330, 15348, 5203, 11252, 4541, 18183, 2776, 16765, 8844, 9370, 9262, 2030, 8007, 11692, 18990, 16167, 9349, 5684, 2151, 1619, 4136, 4438, 8204, 6047, 1672, 8742, 9211, 14662, 18471, 6801, 19582, 19869, 8297, 7783, 14805, 13092, 1736, 5203, 9265, 16929, 5930, 1945, 2184, 6395, 8359, 14683, 18886, 12019, 8694, 10903, 19854, 19704, 4161, 8581, 15179, 7634, 8596, 4075, 13547, 6650, 1404, 12228, 14532, 1106, 11753, 3190, 19673, 4809, 9312, 6788, 19186, 16444, 2616, 11166, 8376, 1086, 19559, 4674, 8573, 19692, 14484, 15507, 12183, 7563, 4843, 19369, 10478, 9245, 18323, 11236, 8507, 7002, 19465, 4315, 15506, 1132, 15708, 18327, 1946, 8290, 4376, 7448, 13270, 17283, 12095, 9436, 9114, 3631, 10391, 12378, 3830, 18340, 4941, 8207, 15241, 5725, 18715, 16315, 7144, 7349, 14783, 9050, 2940, 18067, 11451, 12669, 4187, 15739, 11764, 17281, 15540, 1006, 9410, 16054, 5742, 15965, 10206, 14356, 3045, 12254, 1517, 16825, 19396, 18841, 11306, 16859, 8911, 9223, 17534, 1470, 7254, 14523, 13935, 6785, 6712, 9773, 9507, 11743, 3954, 6351, 3838, 16066, 11586, 4938, 1586, 11511, 16897, 7665, 17731, 1567, 6033, 12492, 9820, 17091, 3368, 11054, 18146, 2841, 5232, 6402, 10732, 5385, 8629, 3121, 16363, 4974, 17197, 19498, 7873, 19796, 1716, 6187, 11201, 1696, 19342, 9460, 9628, 17456, 13240, 9460, 11718, 4995, 15476, 8870, 4474, 16814, 12018, 11616, 18867, 10976, 10383, 15408, 4198, 1549, 9833, 14384, 18909, 12835, 4957, 14398, 16357, 7930, 17217, 1017, 10321, 17969, 18123, 19601, 19870, 12346, 4701, 4312, 19750, 9531, 4836, 6250, 15003, 13497, 10391, 18414, 16527, 14143, 5161, 14512, 15001, 8304, 19244, 11076, 4992, 1774, 16239, 18991, 3178, 3349, 9033, 17746, 7766, 13472, 10475, 6529, 1349, 7525, 2760, 12207, 10798, 5398, 17580, 5158, 8421, 4019, 19254, 6841, 16578, 5075, 9082, 5267, 19617, 2983, 12496, 8789]
li3 = []

for i in li1 :                          # li1 (i) 의 수 하나 뽑았다.
    li2 = []                            # 약수 담을 li2 를 초기화
    b = 0
    for j in range(1,i+1) :             # 1부터 li1(i)까지 중에서
        if i % j == 0  :                # 만약 약수(j) 라면
            for k in range (2,j) :      # 그 약수(j)가 2부터 j-1까지 범위로
                if j % k == 0 :         # 나누어 떨어진다면
                    b += 1              # 약수가 존재(소수가 아님)
            if b == 0 :                 # 만약 약수(j)가 소수라면
                li2.append(j)           # li2에 저장

    if len(li2) >= 4 :                  # 저장된 li2의 길이가 4 이상이면
        li3.append(i)                   # li1수(i) 를 li3에 저장
 
    
print(sum(li3))                         # 모인 것들의 합










#------------------- Day 8----------------------

print("\n\n\n\n\n\n 06.17. \n\n\n\n\n\n")   # 반복문 심화실습 2



# 사약수 구하기
li1 = [87807, 72575, 40450, 74596, 58788, 86941, 58527, 46210, 64064, 49973, 75766, 78403, 54342, 74214, 71491, 48880, 80337, 47463, 43072, 70947, 45268, 91752, 63369, 59346, 67161, 45302, 98664, 73713, 53936, 79283, 79512, 77615, 48439, 78344, 63842, 87904, 51942, 77599, 40358, 51355, 45424, 66870, 50374, 56946, 59357, 75006, 83793, 97051, 90817, 66495, 85856, 94587, 66105, 66461, 60264, 68148, 47949, 92753, 67960, 46402, 75919, 56737, 47534, 67931, 77853, 53790, 64844, 56214, 75374, 73590, 94098, 61093, 82450, 54445, 69713, 93166, 62755, 63150, 69498, 94469, 85306, 48655, 47991, 73539, 86195, 44021, 89714, 91614, 66855, 63983, 84375, 55190, 50224, 80600, 96421, 60212, 83739, 96094, 70476, 63361, 63178, 82743, 43676, 72101, 71961, 51190, 95455, 92818, 72524, 62534, 53654, 68478, 42298, 57792, 69289, 90891, 91318, 73147, 60686, 74136, 57716, 57372, 54980, 44028, 73804, 61998, 77138, 90239, 62567, 79400, 75695, 71155, 92706, 72223, 57392, 73676, 50984, 67595, 95498, 80226, 86398, 59638, 87086, 47930, 75505, 42176, 56170, 54766, 83207, 60897, 60139, 98196, 65490, 47846, 97502, 98768, 69622, 49916, 70615, 87171, 52960, 95528, 68751, 85026, 91131, 71080, 57578, 78413, 94120, 89179, 64371, 64995, 78524, 78022, 73984, 97662, 47888, 71377, 93464, 41021, 55198, 50250, 85472, 50409, 92819, 44218, 84574, 45216, 44471, 61311, 92067, 43021, 56898, 42809, 83521, 98949, 49114, 90343, 93671, 84818, 58475, 69062, 40009, 42356, 84051, 57247, 71645, 48441, 64301, 81255, 78113, 59854, 84866, 52467, 42996, 52986, 85330, 46742, 82058, 93346, 65989, 73710, 49355, 77567, 40563, 69118, 89322, 61163, 81752, 49429, 65313, 59487, 45303, 52538, 55658, 53231, 89515, 91475, 96698, 44437, 91949, 92658, 59490, 43302, 67109, 67600, 47241, 55813, 77767, 83961, 85047, 71808, 69578, 95627, 73572, 77403, 90884, 86646, 54639, 93093, 74626, 56668, 56085, 63702, 53702, 54171, 65689, 48509, 74940, 44742, 79429, 68901, 86455, 54795, 71930, 40830, 59420, 46494, 71252, 98849, 51695, 85521, 79959, 92927, 62205, 88518, 49509, 78384, 97704, 55801, 71522, 71135, 44105, 89244, 74003, 43818, 43359, 82693, 45670, 94990, 57899, 68353, 42111, 88028, 90987, 95358, 95723, 89983, 59189, 86085, 80966, 95155, 81654, 66820, 42523, 81103, 71021, 41051, 40143, 74368, 63636, 61561, 63161, 43680, 48921, 72852, 80611, 40152, 92460, 70080, 77779, 49091, 87670, 42107, 59038, 79063, 76904, 64165, 43424, 55832, 42406, 59935, 82126, 43861, 90650, 41553, 65267, 91926, 78466, 96782, 63109, 52323, 68988, 50346, 64619, 41366, 44515, 87316, 82815, 68209, 40695, 47524, 75243, 44097, 70630, 50580, 52884, 98074, 95912, 72642, 88379, 40983, 67293, 41329, 81555, 86773, 77317, 93194, 55602, 45509, 42862, 47199, 80507, 73996, 72273, 89567, 53057, 40684, 68944, 67256, 92705, 59429, 99596, 45310, 64110, 75307, 45841, 95715, 85717, 63998, 68941, 59582, 60532, 83935, 44162, 98323, 46237, 66656, 58505, 50693, 75800, 47407, 77496, 40083, 52366, 84583, 47092, 44707, 85013, 45536, 80008, 47041, 80376, 76668, 76201, 73071, 68251, 55785, 87140, 71450, 87284, 78139, 81695, 55976, 72978, 56270, 60721, 94556, 88279, 83183, 47147, 93713, 74960, 79175, 98380, 65949, 48773, 69497, 49067, 55079, 95474, 51315, 52434, 56422, 70310, 88401, 82308, 83161, 63186, 69091, 90327, 61590, 91808, 59806, 74606, 59231, 46010, 59957, 70061, 54419, 90593, 81715, 45441, 95154, 69921, 90990, 55310, 83510, 70648, 73389, 80045, 83664, 83552, 82821, 46533, 63902, 87524, 43731, 57821, 44301, 87947, 47720, 57994, 65352, 47031, 54132, 74387, 55770, 44822, 69295]
a = 0
for i in li1 :
    li2 = []
    for j in range(1,i+1) :
        if i % j == 0 :
            li2.append(j) 
    if sum(li2) % 2 == 1 :
        a += 1
print(a)


# 이어적기 2
N = int(input("입력 : "))
C = str() 
for i in range(1,N+1) :
    C += str(i) * i
print(len(C))


# 점수 합산 계산기
li1 = ['oooooxooooo', 'xoooooooo', 'xoooooooo', 'oooxxoxxoo', 'ooooooxooooo', 'oxoxooooo', 'oooooooooxo', 'ooooxxooooo', 'ooxooooooo', 'xooxooxoooxo', 'ooxooxoxo', 'ooooooxxoxxx', 'ooooooooxooo', 'ooooxoooo', 'oooxxxoxooo', 'oxoooooxoo', 'oxxooooxooxo', 'ooooxoooooxo', 'ooooooxooxo', 'oooxoxxoxooo', 'ooxooxoooxo', 'ooooooox', 'oxxoxoooxo', 'ooooxxxo', 'ooooooxoxo', 'ooxxoxoxooox', 'oxoooxoo', 'oooxooxooooo', 'oooooooo', 'ooxooxooxo', 'oxoooooo', 'xooxoxox', 'ooooxooo', 'oooooxoxoo', 'ooooooox', 'xoooooooooxo', 'oooooxooooo', 'oooooxooo', 'oooooxoooooo', 'xoooooooxooo', 'xoooooxo', 'xooooooooo', 'oooooooooxxo', 'oooooooooo', 'xooxooooo', 'oooooooooxo', 'xoxooxoo', 'ooxooooo', 'xoooxxox', 'ooxxooooox', 'xooooooo', 'ooooooooooox', 'oooooooooo', 'oooxooooxxox', 'oooooooox', 'ooooxooooooo', 'oooooooooo', 'ooxxooooxooo', 'oxoxoxooo', 'oxoxooooxox', 'oooxoooxo', 'ooooxoxxooo', 'xooooooo', 'xooxoxoxo', 'ooooooxoxo', 'oooxoooxoooo', 'ooxooooo', 'oxooxxoooo', 'oooooxxx', 'xxoooxoox', 'ooooooooo', 'xoooooxxo', 'oooooooooo', 'ooooooxoo', 'oooxxooo', 'oooooooxo', 'oooxoooxoo', 'oooooxxo', 'ooxxooooooo', 'ooooxxooo', 'oooooxoooo', 'ooxxoxooo', 'oooxooxxo', 'oooooooooxo', 'oxooxooox', 'ooxooooooo', 'xxooxxoooooo', 'oooooooooo', 'oxxxoooooo', 'xoooooxoooo', 'ooooxooooo', 'oxoooxxoo', 'ooxooxoo', 'oooooooo', 'oxxooooo', 'xoooxxxoox', 'oooooooooxo', 'ooooooox', 'ooooooooo', 'oooxooooooox']
su2 = 0
for i in li1 :
    su0 = 0
    su1 = 0
    li = []
    for j in i :
        if j == 'o' :
            li.append(1)
            su0 = 2**(len(li)-1)
        elif j == 'x' :
            li = []
            su0 = 0
        su1 += su0
    su2 += su1
print(su2)


# 팩토리얼 합 구하기
li1 = [23, 14, 4, 15, 16, 9, 17, 12, 25, 23, 14, 16, 7, 7, 13, 5, 20, 20, 17, 29, 13, 15, 30, 27, 18, 3, 27, 3, 10, 13, 24, 29, 18, 19, 9, 20, 14, 25, 3, 16, 11, 3, 14, 30, 14, 6, 13, 11, 26, 15, 29, 17, 6, 24, 9, 10, 28, 4, 20, 29, 9, 27, 8, 4, 14, 3, 5, 8, 7, 19, 15, 20, 3, 21, 25, 4, 3, 19, 24, 12, 22, 13, 30, 20, 28, 6, 8, 27, 26, 28, 28, 27, 9, 27, 26, 29, 7, 6, 6, 19]
li2 = []

for i in li1 :
    a = 1
    for j in range(1,i+1) :      
        a *= j
    li2.append(a)
print(sum(li2))



# 한자리수 약수 구하기
li1 = [9118, 7020, 5086, 9794, 5833, 4054, 8374, 7432, 6150, 6824, 8080, 5809, 6032, 3800, 3674, 4999, 9129, 8487, 3799, 4224, 5535, 8056, 9410, 9113, 4899, 4592, 4696, 7913, 6819, 3314, 3059, 7573, 8174, 9901, 8417, 8860, 5089, 6481, 4319, 3213, 4971, 7452, 7809, 5361, 6452, 9093, 6414, 7525, 7734, 9766, 6035, 6520, 9952, 9933, 6380, 8289, 8725, 3295, 7364, 9317, 7013, 8715, 9299, 6479, 6220, 4136, 4245, 6044, 5092, 4343, 6279, 9151, 6043, 9285, 7345, 9758, 4206, 5074, 4713, 8666, 4867, 8305, 4648, 8648, 3044, 5540, 6342, 9184, 8279, 3987, 6911, 5269, 7796, 8439, 6940, 3888, 4657, 5592, 5246, 7582]
li4 = []

for i in li1 :
    li2 = []
    li3 = []
    for j in range(1,i+1) :
        if i % j == 0 :
            li2.append(j)           # 약수 li2에 담기
    for k in li2 :                  # 담긴 약수들 중에서
        if (k // 10) == 0 :         # 10으로 나눈 몫이 없다면 (한자리수) 
            li3.append(k)           # li3에 담기
    if len(li3) >= 4 :              # 한자리수가 4개라면
        li4.append(i)               # li4에 담기
print(sum(li4))


# 한 줄 입력 단의 갯수 입력 받아서 단 마다 끊어서 출력하기
n = int(input("단의 갯수 입력받기 : "))
print()
a = 2
for a in range(2,10,n) :
    if a+n < 10 :
        for i in range(a,a+n) :         
            print(i,"단출력",end="\t")              # a(초기값 2) 부터 n 단까지 단출력
    elif a+n > 10 :
        for i in range(a,10) :
            print(i,"단출력",end="\t")
    print()
    if a+n < 10 :
        for j in range(1,10) :                      # 1 부터 9까지 곱해준다
            for k in range(a,a+n) :                 # a부터 n개단을
                print(k,"x",j,"=",j*k,end="\t")     
            print()
    elif a+n > 10 :
        for j in range(1,10) :
            for k in range(a,10) :                 # a부터 n개단을
                print(k,"x",j,"=",j*k,end="\t")     
            print()
    print()
    a += n                                      # a값 n 만큼 상승 



### 문자열 포맷팅 !!

# 방법1. 서식문자 표기법(비추)
# - 변수 들어갈 자리에 %d(정수) %s(문자열) %f(실수) 뚫어주고 뒤에서 매꿔주기
# ex)
for i in range(2,10):
    for j in range(1,10):
        print("%d x %d = %d",i,j,i*j)

# 방법2. 문자열 함수 format(추천)
# - 변수 들어갈 자리에 {} 중괄호 뚫어주고 뒤에서 매꿔주기 / 방법 1과 비슷하지만 자료형태에 구애받지 않는다.
print("{} x {} = {}".format(i,j,i*j))

# 방법3. f string (강추)
# 문자열앞에 f 표기 {} 안에 바로 변수를 넣어버리면됨
print(f"{i} x {j} = {i*j}")
            

## 반복문 탈출
for i in range(10):
    if i ==3 :
        break
    print(i)            # 반복문 안에서 if조건을 만족하면 break로 반복문 밖으로 탈출
                        # break가 반복문 밖에 있으면 에러가 난다.
                        # berak는 가장 가까운 loop 하나만 빠져나갈수 있다.


# break를 이용한 소수판단
n = int(input())

ck =True
for i in range(2,n):
    if n %i==0:
        ck = False
        break
print(n,ck)

# continue 예제         # coninue - 다음으로 그냥 넘어간다. break/continue/pass 세가지 잘 구분하여 사용할 수 있게 연습하기
for i in range(10):
    if i<5:
        continue
    print(i)
































#------------------- Day 9----------------------

print("\n\n\n\n\n\n\n 06.20. \n\n\n\n\n\n")        # while문, continue,break복습 

# 지난 시간 리뷰
# break 는 반복문 안에서만 사용


for i in [1,2,3]:
    for j in [4,5,6,]:
        print(i,j)
        if j==5:
            break
    print("!")
else :
    print("!@")
 
# for 문에도 else 가 존재할수 있다  -  for문 안에서 break를 한번도 만나지않으면 else가 실행된다



# for 문은 반복횟수 명확할때 사용
# while 문은 반복횟수 명확하지 않을때 사용
# 게임 / GUI에 while이 숨어있다.

# while Bool :
#     [종속문장]

#     Bool값이 참일때 종속문장 반복
#     반복의 의미가 강하다. (반복간 변하는 값은 일일히 지정)

for i in range(1,11):
    print(i)
i = 1
while i < 11:
    print(i)
    i+=1

# while문으로 구구단 짜기

i = 2
j = 1
while i < 10 :
    while j < 10 :
        print(f"{i}x{j}={i*j}")
        j+= 1
    i += 1
    j = 1

# 0 입력했때 종료되는 프로그램
n = int(input("입력 (종료 0) : "))
while n != 0 :
    n = int(input("입력 (종료 0) : "))
print(" 프로그램 종료 ")
# 쌤 풀이
while True :
    n = int(input("입력 (종료 0) : "))

    if n == 0 :
        print("프로그램 종료")
        break

# 0 입력시까지 평균구하기
li = []
while True :
    n = int(input("입력 (종료 0) : "))
    li.append(n)

    if n == 0 :
        print(sum(li)/(len(li)-1))  # n = 0 일떄 길이 하나 빼기
        break
# 쌤 풀이
li = []
while True :
    n = int(input("입력 (종료 0) : "))
    if n == 0 :
        print(sum(li)/(len(li)))  
        break
    li.append(n)

# 1. 숫자로 이루어진 입력이 들어왔을때
# 2. 아닐때
#     2-1) 종료시그널(q)
#     2-2) 아닐때
####
#     1. 리스트에 담아준다.
#     2-1. 평균 출력하고 종료한다.
#     2-2. 숫자 입력하라고 안내한다.
####
# 문자열.isnumeric()
# 문자열이 숫자로만 구성 True
# 문자열에 문자가 포함되어 있으면 False
####
# 함수의 결과 Bool > if
# 함수의 결과 iter(list) > for


# 프로그래밍 시 구조 짜는 연습 문제
# 숫자들의 평균 구하기.
# 1) 숫자로 이루어진 입력이 들어왔을 때
# 2) 아닐때
#       2-1)  종료시그널(q)
#       2-2)  아닐때 
# 1. 리스트에 담아준다
# 2-1. 평균 출력하고 종료한다
# 2-2. 숫자 입력하라고 안내한다
# li = []
# while True : 
#     N = input("입력 (종료q) : ")
#     if N.isnumeric():
#         # 1. 숫자로 이루어진 입력이 들어왔을때
#         li.append(int(N))
#             # 1. 리스트에 담아준다
#     else : 
#         # 2. 아닐때
#         if N == "q" :
#             # 2-1) 종료시그널(q)
#             print(f"{sum(li)/len(li)}")
#                 # 2-1. 평균 출력하고 종료한다.
#         else :
#             # 2-2) 아닐때
#             print("숫자입력!!")
#                 # 2-2. 숫자 입력하라고 안내한다.


# 해당코드 오류 수정 - 리스트가 비어있을때
# li = []
# while True : 
#     N = input("입력 (종료 : q) : ")
#     if N.isnumeric() :
#         li.append(int(N))
#     else :
#         if N == "q" :
#             if li :     # list가 비어있으면 false, list에 뭐라도 있으면 true 가 되는 bool 표현
#                 print(f"sum = {sum(li)/len(li)}")
#             else : 
#                 print("입력된 숫자가 없습니다.")
#         else : 
#             print("숫자입력!!")


# Q. 종료시까지 점수를 입력받는 프로그램을 사용자가 사용할 수 있도록 작성해주세요. 
# 요구명세서 
# 1) 숫자가 입력되었을 경우
#     1-1) 0에서 100까지 입력되었을 경우
#     1-2) 그외 범위가 입력되었을 경우
# 2) 문자가 입력되었을 경우
#     2-1) 종료시그널(q) 이 입력되었을 경우
#        2-1-1) 입력된 숫자가 있을 경우
#        2-1-2) 입력된 숫자가 없을 경우
#     2-2) 그외 입력이 들어올 경우
# 1-1) 리스트에 담는다
# 1-2) 올바른 범위를 입력하라고 안내해준다.
# 2-1-1) 평균을 출력하고 종료를 해준다.
# 2-1-2) 입력된 값이 없다고 안내해준다.
# 2-2) 숫자입력하라고 안내해준다.
# li = []
# while True :
#     n = input("입력 (종료 q) :")
#     if n.isnumeric() :          # 1) 숫자가 입력되었을 경우
#         if 0<= int(n) <=100 :     #     1-1) 0에서 100까지 입력되었을 경우
#             li.append(int(n))        # 1-1) 리스트에 담는다
#         else :                  #     1-2) 그외 범위가 입력되었을 경우
#             print("올바른 범위를 입력!!")
#     else :                      # 2) 문자가 입력되었을 경우
#         if n == "q" :           #     2-1) 종료시그널(q) 이 입력되었을 경우
#             if li :             #        2-1-1) 입력된 숫자가 있을 경우
#                 print(f"평균 = {sum(li)/len(li)}")
#             else :              #        2-1-2) 입력된 숫자가 없을 경우
#                 print("입력된 숫자가 없습니다.")
#         else :                  #     2-2) 그외 입력이 들어올 경우
#             print("숫자입력!!")


# 자판기 프로그래밍

n = 0
while True:
    print("----Menu----\n1. 콜라 / 300\n2. 사이다 / 300\n3. 커피 / 200\n4. 돈넣기\n5. 잔돈 반환\n6. 종료\n--------------")
    print(f"현재 금액 : {n}")
    menu = int(input("메뉴 선택 : "))
    print()
    if menu == 4 :                  # 처음 돈 넣기
        n += int(input("돈을 넣어주세요 : "))
        print()
    elif menu == 1 :               # 콜라
        if n - 300 >= 0 :        # 돈이 많은 경우
            n -= 300
            print("콜라 맛있게 드세요!")            
        else :                   # 돈이 부족한 경우
            print("금액이 부족합니다.")
    elif menu == 2 :               # 사이다
        if n - 300 >= 0 :        # 돈이 많은 경우
            n -= 300
            print("사이다 맛있게 드세요!")            
        else :                   # 돈이 부족한 경우
            print("금액이 부족합니다.") 
    elif menu == 3 :               # 커피
        if n - 200 >= 0 :        # 돈이 많은 경우
            n -= 200
            print("커피 맛있게 드세요!")            
        else :                   # 돈이 부족한 경우
            print("금액이 부족합니다.")
    elif menu == 5 :            # 잔돈 반환
        print("잔돈이 반환됩니다.")
        break
    elif menu == 6:
        break
    print()




